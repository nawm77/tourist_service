version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin

  prometheus:
    image: bitnami/prometheus
    container_name: prometheus_tourist
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml

  grafana:
    image: grafana/grafana
    container_name: grafana_tourist
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
    ports:
      - "3000:3000"
#    volumes:
#      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml
#      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch-tourist
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elastic_tourist:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.7.0
    container_name: kibana_tourist
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch-tourist:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch-tourist:9200"]'
    depends_on:
      - elasticsearch

  logstash:
    image: logstash:8.7.0
    container_name: logstash_tourist
    volumes:
      - ./logstash/config/logstash.yaml:/usr/share/logstash/config/logstash.yaml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "6000:5000/tcp"
      - "6000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  redis:
    image: redis
    container_name: redis_tourist
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbit_tourist
    restart: unless-stopped
    environment:
      TZ: Europe/Moscow
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: 1234
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
      - ./rabbitmq/init.sh:/var/init.sh
    ports:
      - "5672:5672"
      - "15672:15672"

#  backend:
#    container_name: tourist-backend
#    image: tourist-backend
#    build:
#      context: /Users/ilyachaynichkov/IdeaProjects/lab5/adm_exam/domain-service/Dockerfile
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8085/actuator/health" ]
#      interval: 20s
#      timeout: 20s
#      retries: 5
#    ports:
#      - "8085:8085"
#    depends_on:
#      - mongodb
#      - prometheus
#      - redis
#      - logstash
#    environment:
#      SPRING_DATA_MONGODB_DATABASE: touristService
#      SPRING_DATA_MONGODB_PORT: 27017
#      SPRING_DATA_MONGODB_HOST: mongodb
#      SPRING_DATA_MONGODB_AUTO-INDEX-CREATION: true
#      GRPC_SERVER_PORT: 9090
#      SERVER_PORT: 8085
#
#  gateway:
#    container_name: tourist-gateway
#    image: tourist-gateway
#    build:
#      context: ../api-gateway/Dockerfile
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
#      interval: 20s
#      timeout: 20s
#      retries: 5
#    ports:
#      - "8085:8085"
#    depends_on:
#      - mongodb
#      - prometheus
#      - redis
#      - logstash
#      - backend
#    environment:
#      GRPC_CLIENT_touristService_ADDRESS: tourist-backend:9090
#      GRPC_CLIENT_touristService_NEGOTIATION_TYPE: plaintext
#      SERVER_PORT: 8080

volumes:
  elastic_tourist:
    driver: local
#  sharing:
#    image: bike-sharing-mongo:0.2.0
#    build:
#      context: .
#    container_name: sharing-mongo
#    ports:
#      - '8080:8080'
#    environment:
#      SPRING_DATA_MONGODB_DATABASE: bikeService
#      SPRING_DATA_MONGODB_PORT: 27017
#      SPRING_DATA_MONGODB_HOST: mongodb
#      SPRING_DATA_MONGODB_AUTO-INDEX-CREATION: true
version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_CONTAINER_PORT}:${MONGO_PORT}"

  mongo-express:
    image: mongo-express
    container_name: ${MONGO_EXPRESS_CONTAINER_NAME}
    ports:
      - "${MONGO_EXPRESS_CONTAINER_PORT}:${MONGO_EXPRESS_PORT}"
    environment:
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_CONTAINER_NAME}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}

  prometheus:
    image: prom/prometheus
    container_name: ${PROMETHEUS_CONTAINER_NAME}
    ports:
      - "${PROMETHEUS_CONTAINER_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: ${GRAFANA_CONTAINER_NAME}
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    ports:
      - "${GRAFANA_CONTAINER_PORT}:${GRAFANA_PORT}"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yml

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: ${ELASTICSEARCH_CONTAINER_NAME}
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "${ELASTICSEARCH_CONTAINER_PORT}:${ELASTICSEARCH_PORT}"
    volumes:
      - elastic_tourist:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.7.0
    container_name: ${KIBANA_CONTAINER_NAME}
    ports:
      - "${KIBANA_CONTAINER_PORT}:${KIBANA_PORT}"
    environment:
      ELASTICSEARCH_URL: http://${ELASTICSEARCH_CONTAINER_NAME}:${ELASTICSEARCH_PORT}
      ELASTICSEARCH_HOSTS: '["http://${ELASTICSEARCH_CONTAINER_NAME}:${ELASTICSEARCH_PORT}"]'
    depends_on:
      - elasticsearch
      - logstash

  logstash:
    image: logstash:8.7.0
    container_name: ${LOGSTASH_CONTAINER_NAME}
    volumes:
      - ./logstash/config/logstash.yaml:/usr/share/logstash/config/logstash.yaml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "${LOGSTASH_TCP_CONTAINER_PORT}:${LOGSTASH_TCP_PORT}/tcp"
      - "${LOGSTASH_UDP_CONTAINER_PORT}:${LOGSTASH_UDP_PORT}/udp"
      - "${LOGSTASH_HTTP_CONTAINER_PORT}:${LOGSTASH_HTTP_PORT}"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  redis:
    image: redis
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "${REDIS_CONTAINER_PORT}:${REDIS_PORT}"

  rabbitmq:
    image: rabbitmq:latest
    container_name: ${RABBITMQ_CONTAINER_NAME}
    environment:
      TZ: Europe/Moscow
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - "${RABBITMQ_CONTAINER_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_CONTAINER_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    volumes:
      - ./rabbitmq/init.sh:/var/init.sh
  backend:
    container_name: ${BACKEND_CONTAINER_NAME}
    image: nawm77/tourist-backend:1.6
    build:
      context: ../domain-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${BACKEND_PORT}/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    ports:
      - "${BACKEND_CONTAINER_PORT}:${BACKEND_PORT}"
    depends_on:
      - mongodb
      - prometheus
      - redis
      - logstash
    environment:
      SPRING_DATA_MONGODB_DATABASE: ${MONGODB_DATABASE_NAME}
      SPRING_DATA_MONGODB_PORT: ${MONGO_PORT}
      SPRING_DATA_MONGODB_HOST: ${MONGO_CONTAINER_NAME}
      SPRING_DATA_MONGODB_AUTO-INDEX-CREATION: true
      GRPC_SERVER_PORT: ${BACKEND_GRPC_PORT}
      SERVER_PORT: ${BACKEND_PORT}
      SPRING_RABBITMQ_HOST: ${RABBITMQ_CONTAINER_NAME}
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      LOGSTASH_HOST: ${LOGSTASH_CONTAINER_NAME}
      LOGSTASH_PORT: ${LOGSTASH_TCP_PORT}

  gateway:
    container_name: ${GATEWAY_CONTAINER_NAME}
    image: nawm77/tourist-gateway:1.6
    build:
      context: ../api-gateway
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${GATEWAY_PORT}/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 30s
    ports:
      - "${GATEWAY_CONTAINER_PORT}:${GATEWAY_PORT}"
    depends_on:
      - mongodb
      - prometheus
      - redis
      - logstash
      - backend
    environment:
      GRPC_CLIENT_touristService_ADDRESS: ${BACKEND_CONTAINER_NAME}:${BACKEND_GRPC_PORT}
      GRPC_CLIENT_touristService_NEGOTIATION_TYPE: plaintext
      SERVER_PORT: ${GATEWAY_PORT}
      SPRING_RABBITMQ_HOST: ${RABBITMQ_CONTAINER_NAME}
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SPRING_DATA_REDIS_HOST: ${REDIS_CONTAINER_NAME}
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      LOGSTASH_HOST: ${LOGSTASH_CONTAINER_NAME}
      LOGSTASH_PORT: ${LOGSTASH_TCP_PORT}

volumes:
  elastic_tourist:
    driver: local